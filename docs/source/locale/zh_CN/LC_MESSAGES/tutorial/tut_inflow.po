# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Chen Zhang
# This file is distributed under the same license as the informatics
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: informatics 0.0.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-18 18:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/tutorial/tut_inflow.rst:2
msgid "_`Operations on file search and mapping`"
msgstr "_`文件搜索以及映射操作`"

#: ../../source/tutorial/tut_inflow.rst:4
msgid ""
"Most of the analysis occurs in data stored in the file system. The "
"ability to accurately manipulate (primarily loading) these files is an "
"essential skill. Accurately loading and manipulating files improves the "
"overall efficiency of the process, as it ensures that the correct data is"
" being used for analysis, reducing the risk of errors and "
"inconsistencies."
msgstr ""
"大多数分析发生在存储在文件系统中的数据中。正确处理（主要是加载）这些文件的能力是一种基本技能。"
"正确地加载和处理文件确保了用于分析的是正确的数据，减少错误与不一致的风险，可以提高整体工作效率。"

#: ../../source/tutorial/tut_inflow.rst:9
msgid ""
"Engineering implementation of file operations requires good understanding"
" of the file structure and format, as well as size and complexity of the "
"files being analyzed. Large or complex files can pose challenges in terms"
" of processing power, memory usage, and time required for analysis."
msgstr "文件处理的工程实现需要很好地理解文件的结构和格式，以及被分析文件的大小和复杂性。"
"大型或复杂的文件可能在处理能力、内存使用和分析所需的时间方面带来挑战。"

#: ../../source/tutorial/tut_inflow.rst:14
msgid "_`Applying generator function`"
msgstr "_`生成器功能的应用`"

#: ../../source/tutorial/tut_inflow.rst:16
msgid ""
"For persistent inflow data, the cost of memory consuming should be under "
"consideration. :numref:`generator function` demonstrates the logic to "
"return a iterable container via two different implemented methods. "
"Compare to the case of :code:`iter2`, :code:`iter1` will increasingly "
"occupy the cache until release after return, which readily results in "
"memory leak if the scale of :code:`cases` is large enough."
msgstr "对于持续流入的数据，内存开销是不得不考虑的一个问题 :numref:`generator function` 演示了"
"通过两个不同的实现方法返回可迭代容器的逻辑。与 :code:`iter2` 中的例子相比， :code:`iter1` 会"
"持续增加缓存占用，直到返回后释放为止，如果 :code:`cases` 足够大，很容易导致内存泄漏。"

#: ../../source/tutorial/tut_inflow.rst:21
msgid "generator function"
msgstr "生成器函数"

#: ../../source/tutorial/tut_inflow.rst:41
msgid ""
"Notably, the tuple comprehension in Python will trigger lazy evaluation. "
"In that case a generator object will be return. From example above, "
":code:`iter3` can be seem as an another equivalent implementation for "
":code:`iter2`."
msgstr ""
"值得注意的是，Python中的元组推导会触发延迟求值。在这种情况下，将返回一个生成器对象。"
"从上面的例子来看，:code:`iter3` 可以被看作是 :code:`iter2` 的一个等效实现"

#: ../../source/tutorial/tut_inflow.rst:45
msgid "_`File searcher and folder relocation`"
msgstr "_`文件检索器与文件夹重定位`"

#: ../../source/tutorial/tut_inflow.rst:47
msgid ""
"For universality, interfaces of search or filtering are designed in form "
"of high-order function. Example of :numref:`file searcher` shows two "
"different pipelines for searching image files with `jpg` or `jpeg` "
"suffix, and for finding empty files."
msgstr "为了通用性，搜索或过滤接口采用高阶函数形式设计。示例 :numref:`file searcher` 显示了"
"两种不同的管道，用于搜索带有‘jpg’或‘jpeg’后缀的图像文件，以及查找空文件。"

#: ../../source/tutorial/tut_inflow.rst:51
msgid "file searcher"
msgstr "文件检索器"

#: ../../source/tutorial/tut_inflow.rst:76
msgid ""
"Occasionally files in identical folder needs some kind of uniformed "
"treatment (like using labels as folder names for data with different "
"attributes). Under this circumstance, folder relocation can escape "
"redundant operation on files. Following the :code:`p1` in :numref:`file "
"searcher`, the example implementation in :numref:`folder relocation` "
"shows an operation of reading images located in different file folders "
"named using file format suffix (as shown in :ref:`example right side "
"<file structure for JPG and BMP>`)."
msgstr "有时候，同一个文件夹下的文件需要使用统一的处理方式（例如使用标签作为具有不同属性的数据的文件夹名称）。"
"在这种情况下，文件重定位可以跳过冗余的文件操作。顺着 :numref:`file searcher` 中"
"的 :code:`p1` , :numref:`folder relocation` 中的示例实现展示了一种读取位于不同文件夹中的"
"后缀名不同的图像的操作（如 :ref:`右边例子 <file structure for JPG and BMP>` ）所示。"

#: ../../source/tutorial/tut_inflow.rst:82
msgid ""
"Those two searchers can both be run, in desktop or hadoop distributed "
"file systems. Refer their documentations for details."
msgstr "这两个检索器都可以在单机或hadoop分布式文件系统中运行。具体信息请参考其官方文档。"

#: ../../source/tutorial/tut_inflow.rst:85
msgid "folder relocation"
msgstr "文件夹重定位"

#: ../../source/tutorial/tut_inflow.rst:94
msgid "_`Universal data loader`"
msgstr "_`通用数据加载器`"

#: ../../source/tutorial/tut_inflow.rst:96
msgid ""
"The charm of :ref:`functional programming <Abstraction for behaviors>` is"
" using function to define behaviors. It is of greater scalability to deal"
" with different dataset. Simple combination and definition can make "
"pipeline be capable for loading any type of data:"
msgstr ""
":ref:`函数式编程 <Abstraction for behaviors>` 的魅力在于用函数来定义行为。"
"处理不同的数据集具有更大的可扩展性。简单的组合和定义可以使管道能够加载任何类型的数据："

#: ../../source/tutorial/tut_inflow.rst:100
msgid "meta data loader"
msgstr "元数据加载器"

#: ../../source/tutorial/tut_inflow.rst
msgid "Authors"
msgstr "译者"

#: ../../source/tutorial/tut_inflow.rst:116
msgid "Chen Zhang"
msgstr "Marin<381017759@qq.com>"

#: ../../source/tutorial/tut_inflow.rst
msgid "Version"
msgstr "版本"

#: ../../source/tutorial/tut_inflow.rst:117
msgid "0.0.4"
msgstr ""

#: ../../source/tutorial/tut_inflow.rst
msgid "|create|"
msgstr "创建于"

#: ../../source/tutorial/tut_inflow.rst:118
msgid "Feb 18, 2024"
msgstr "2024年2月18日"

