# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Chen Zhang
# This file is distributed under the same license as the informatics
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: informatics 0.0.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-18 18:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/tutorial/tut_pipe.rst:2
msgid "_`Pipelining the data process`"
msgstr "_`数据处理中的管道化`"

#: ../../source/tutorial/tut_pipe.rst:4
msgid ""
"As the preferred language for artificial intelligence, Python is featured"
" as its rich ecosystem, as well as the convenience for fast "
"implementation and developing. Data processing involving in different "
"technical approaches requires systematical integration. Thus, the unified"
" data controlling among those utilities contributes to accelerate "
"verifying prototypes, optimize algorithm performance, as well as lower "
"maintenance cost."
msgstr "作为人工智能的首选语言，Python以其丰富的生态系统以及快速实现和开发的便利性而闻名。"
"涉及不同技术方法的数据处理需要系统化地集成。因此，各个应用程序之间的统一数据控制有助于加速"
"原型验证，优化算法性能，降低维护成本。"

#: ../../source/tutorial/tut_pipe.rst:14
msgid "ecosystem of Python"
msgstr "Python生态系统"

#: ../../source/tutorial/tut_pipe.rst:16
msgid ""
"Data processing is akin to an assembly line, where an increase in the "
"number of steps results in a exponential growth of factors that can "
"impact the final result. While manually configuring all possible options "
"for trial may seem feasible, it often leads to a chaotic outcome."
msgstr "数据处理类似于装配线，其中步骤数量的增加会导致影响最终结果的因素呈指数增长。"
"虽然手动配置所有可能的试验选项似乎是可行的，但往往会导致混乱的结果。"

#: ../../source/tutorial/tut_pipe.rst:20
msgid ""
"An uniform protocol, or programming norm, is therefore not only of "
"advantages in integrating various tools developed by teams in different "
"fields in Python ecosystem, but also time-saving for building practical "
"pipelines or applications, on basis of each naive functional module. "
"Following examples demonstrate how to establish pipelines for automating "
"complex tasks."
msgstr "因此，统一的协议或编程规范不仅在集成Python生态系统中不同领域的团队开发的各种工具方面具有优势，"
"而且还在基于每个原始功能模块构建实际管道或应用程序时也节省了时间。下面的例子演示了如何建立自动化复杂任务的管道。"

#: ../../source/tutorial/tut_pipe.rst:26
msgid "_`Normalized scientific computing`"
msgstr "_`规范化科学计算`"

#: ../../source/tutorial/tut_pipe.rst:28
#, python-format
msgid ""
"Scientific computing flow implemented through informatics functions is of"
" high completeness. And their units are readily to be flexibly reused "
"when create new processing flow. :numref:`flexibility and reusability of "
"unit` is a snippet in implementation for exporting :numref:`Figure %s "
"<pathological image statistics>`."
msgstr "通过informatics函数实现的科学计算流程具有较高的完备性。当新的处理流程被创建时，其组成单元"
"就可以很容易且灵活地被复用。:numref:`flexibility and reusability of unit` 是"
"导出 :numref:`图 %s <pathological image statistics>` 的一个代码实现片段。"

#: ../../source/tutorial/tut_pipe.rst:32
msgid "flexibility and reusability of unit"
msgstr "单元的灵活性和可重用性"

#: ../../source/tutorial/tut_pipe.rst:44
msgid ""
":code:`to_fig3` corresponds to the case (c). Obtain this figure must "
"overlap the random colored cell nucleus masks, superpositioned with grey "
"scale image, then pass on an image viewer unit. It is the reason unit "
":code:`u1` is arranged paralleled with a sequential processing line "
":code:`u1 >> u2 >> u3 >> u4`."
msgstr ""
":code:`to_fig3` 与案例（c）对应。获得这样一张图必须将随机着色的细胞核蒙版重叠，随之与灰度图像叠加，"
"然后传递给图像查看器单元。这就是单元 :code:`u1` 与顺序处理流程并联布置的原因。"

#: ../../source/tutorial/tut_pipe.rst:48
#, python-format
msgid ""
"To export the (c) case in :numref:`Figure %s <pathological image "
"statistics>`, call :code:`to_fig3(data=file)`. If a researcher desires "
"other parameters, call :code:`to_fig3(data=file, **user_defined_config)`."
" Or in more complicated situation, if the researcher want to compare "
"outcomes from an identical pipe in different parameters, those derived "
"pipes can also be readily obtained by: :code:`p = "
"to_fig3.shadow(**config1) | to_fig3.shadow(**config2)`."
msgstr ""

#: ../../source/tutorial/tut_pipe.rst:54
msgid "_`Automation experiment`"
msgstr "_`自动化实验`"

#: ../../source/tutorial/tut_pipe.rst:56
msgid ""
"There are also meta tools, for automation computing. The following "
"example concerned the difference between global prewitt and canny filters"
" on a natural image:"
msgstr "此外还提供自动化计算的元工具。下面的例子是关于自然图像上全局prewitt滤波器和canny滤波器的区别："

#: ../../source/tutorial/tut_pipe.rst:59
msgid "auto experiment pipeline"
msgstr "自动实验管道"

#: ../../source/tutorial/tut_pipe.rst:80
msgid ""
"It includes data processing functions dealing with cropping, de-noising, "
"and resampling, followed by another paralleled unit of filters. The user-"
"customized process is implemented via lambda calculus: print out the "
"standard deviation of difference between two paralleled output, display "
"their pixel distribution difference, then return those two filtered "
"figures."
msgstr "自动实验管道包括处理裁剪、去噪和重采样等数据处理功能，与之并行的还有滤波器单元。"
"通过lambda演算实现用户自定义的处理流程：打印出两个并行输出之间标准差的区别，显示它们的像素分布差，"
"随后返回这两个过滤后的图形。"

#: ../../source/tutorial/tut_pipe.rst:85
msgid ""
"As most functions in tensor namespace, including the :code:`F` lambda, "
"have been already registered as informatics version, the :code:`p` can "
"automatically analyze what keyword arguments are the required at least. "
"Making a parameter pool based on the required arguments. The following "
"code can auto trigger the experiments then dump each running case."
msgstr "和张量命名空间中的大多数函数一样，包括 :code:`F` 在内，lambda已被封装为Informatics版本, :co  de:`p` 可以"
"自动化地分析那些关键词参数是必要的，并基于需要的参数创建参数工具。下面的代码可以自动触发上述实验，"
"然后转储每个运行的情况。"

#: ../../source/tutorial/tut_pipe.rst:90
msgid "run auto experiment"
msgstr "运行自动实验"

#: ../../source/tutorial/tut_pipe.rst:104
#, python-format
msgid ""
"Prompt will info the current condition and calculated standard deviation, "
" running time, and the final result case by case; then the histogram "
"figure will be popped up like :numref:`Figure %s <experiment flow "
"histogram>`."
msgstr "提示将逐例提示当前状态并计算标准差、运行时间，以及最终结果，随后则会弹出"
"如下 :numref:`Figure %s <experiment flow histogram>` 直方图。"

#: ../../source/tutorial/tut_pipe.rst:112
msgid "histogram for pixels distribution after prewitt and canny filters"
msgstr "经prewitt和canny算子滤波后的像素分布直方图"

#: ../../source/tutorial/tut_pipe.rst:114
msgid ""
"All experiment results will be collected into a persistence file titled "
"`experiment_results.pyp` inplace."
msgstr "所有实验结果将被整合到一个名为“experiment_results.pyp”的持久性本地文件中。"

#: ../../source/tutorial/tut_pipe.rst:117
msgid "_`Automation testing`"
msgstr "_`自动化测试`"

#: ../../source/tutorial/tut_pipe.rst:119
msgid ""
"Different from automation experiment which can export the computed "
"results, the automation testing only records the exit code. If the "
"pipeline exits with raised exception, related information will also be "
"noted. Similar as :code:`experiments` in :numref:`run auto experiment`, "
"this meta implementation :code:`funtest` is in the same namespace. It can"
" test for informatics functions, unit and pipelines defined via this "
"framework."
msgstr "与自动化实验可以输出计算结果不同，自动化测试只记录退出代码。如果管道退出并引发异常，"
"也会记录相关信息。与 :code:`experiments` 类似，在 :numref:`run auto experiment` 中，"
"元实现 :code:`funtest` 在同一个namespace中。通过这个框架可以测试informatics的函数、单元和管道。"

#: ../../source/tutorial/tut_pipe.rst:129
msgid "automation testing result for resize function"
msgstr "重新缩放函数的自动化测试结果"

#: ../../source/tutorial/tut_pipe.rst:131
#, python-format
msgid ""
":numref:`Figure %s <automation testing result>` is the test result for "
":code:`resize` function. Class type remains in *result* column. The cost "
"time, arguments for each test item are also be recorded."
msgstr " :numref:`图 %s <automation testing result>` 是 :code:`resize` 函数的测试结果。"
"类别名称在 *result* 一列中。运行时间，每次测试的参数也被记录在其中。"

#: ../../source/tutorial/tut_pipe.rst
msgid "Authors"
msgstr "译者"

#: ../../source/tutorial/tut_pipe.rst:136
msgid "Chen Zhang"
msgstr "Marin<381017759@qq.com>"

#: ../../source/tutorial/tut_pipe.rst
msgid "Version"
msgstr "版本"

#: ../../source/tutorial/tut_pipe.rst:137
msgid "0.0.4"
msgstr ""

#: ../../source/tutorial/tut_pipe.rst
msgid "|create|"
msgstr "创建于"

#: ../../source/tutorial/tut_pipe.rst:138
msgid "Feb 7, 2024"
msgstr "2024年2月7日"

